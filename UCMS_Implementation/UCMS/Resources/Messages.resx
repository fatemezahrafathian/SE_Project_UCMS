<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EmailAlreadyTaken" xml:space="preserve">
    <value>Email is already taken.</value>
  </data>
  <data name="UsernameAlreadyTaken" xml:space="preserve">
    <value>Username is already taken.</value>
  </data>
  <data name="PasswordNotStrong" xml:space="preserve">
    <value>Password is not strong enough.</value>
  </data>
  <data name="RegisteredSuccessfully" xml:space="preserve">
    <value>User registered successfully.</value>
  </data>
  <data name="InvalidToken" xml:space="preserve">
    <value>Invalid token</value>
  </data>
  <data name="AccountConfirmedSuccessfully" xml:space="preserve">
    <value>Account confirmed successfully</value>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>Internal Server Error</value>
  </data>
  <data name="PasswordNotMatch" xml:space="preserve">
    <value>Passwords do no.t match</value>
  </data>
  <data name="InvalidInputMessage" xml:space="preserve">
    <value>InvalidInputMessage</value>
  </data>
  <data name="UserNotFoundMessage" xml:space="preserve">
    <value>UserNotFoundMessage</value>
  </data>
  <data name="WrongPasswordMessage" xml:space="preserve">
    <value>WrongPasswordMessage</value>
  </data>
  <data name="LoginSuccessfulMessage" xml:space="preserve">
    <value>LoginSuccessfulMessage</value>
  </data>
  <data name="LogoutSuccessfulyMessage" xml:space="preserve">
    <value>LogoutSuccessfulyMessage</value>
  </data>
  <data name="UnauthorizedMessage" xml:space="preserve">
    <value>UnauthorizedMessage</value>
  </data>
  <data name="AuthorizedMessage" xml:space="preserve">
    <value>AuthorizedMessage</value>
  </data>
  <data name="OneTimeCodeSent" xml:space="preserve">
    <value>OneTimeCodeSent</value>
  </data>
  <data name="ExpiredCode" xml:space="preserve">
    <value>Expired code</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>User with id = {0} not found.</value>
  </data>
  <data name="UserFound" xml:space="preserve">
    <value>User with id = {0} found.</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>User with id = {0} deleted successfully.</value>
  </data>
  <data name="UpdateUser" xml:space="preserve">
    <value>user with id = {0} updated successfully.</value>
  </data>
  <data name="Forbidden" xml:space="preserve">
    <value>You are not allowed to access this resource</value>
  </data>
  <data name="PasswordChange" xml:space="preserve">
    <value>passwrod changed successfully.</value>
  </data>
  <data name="ClassCreatedSuccessfully" xml:space="preserve">
    <value>Class was created successfully.</value>
  </data>
  <data name="ClassNotFound" xml:space="preserve">
    <value>Class not found.</value>
  </data>
  <data name="ClassCan'tBeAccessed" xml:space="preserve">
    <value>Class can't be accessed.</value>
  </data>
  <data name="ClassFetchedSuccessfully" xml:space="preserve">
    <value>Class fetched successfully.</value>
  </data>
  <data name="ClassesRetrievedSuccessfully" xml:space="preserve">
    <value>Classes retrieved successfully.</value>
  </data>
  <data name="ClassDeletedSuccessfully" xml:space="preserve">
    <value>Class deleted successfully.</value>
  </data>
  <data name="ClassUpdatedSuccessfully" xml:space="preserve">
    <value>Class updated successfully.</value>
  </data>
  <data name="AllUsersFetchedSuccessfully" xml:space="preserve">
    <value>All users fetched successfully</value>
  </data>
  <data name="AllRolesFetchedSuccessfully" xml:space="preserve">
    <value>All roles fetched successfully</value>
  </data>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="EmailAlreadyTaken" xml:space="preserve">
        <value>Email is already taken.</value>
    </data>
    <data name="UsernameAlreadyTaken" xml:space="preserve">
        <value>Username is already taken.</value>
    </data>
    <data name="PasswordNotMatch" xml:space="preserve">
        <value>Passwords do no.t match</value>
    </data>
    <data name="PasswordNotStrong" xml:space="preserve">
        <value>Password is not strong enough.</value>
    </data>
    <data name="RegisteredSuccessfully" xml:space="preserve">
        <value>User registered successfully.</value>
    </data>
    <data name="InvalidToken" xml:space="preserve">
        <value>Invalid token</value>
    </data>
    <data name="AccountConfirmedSuccessfully" xml:space="preserve">
        <value>Account confirmed successfully</value>
    </data>
    <data name="InternalServerError" xml:space="preserve">
        <value>Internal Server Error</value>
    </data>
    <data name="InvalidInputMessage" xml:space="preserve">
        <value>InvalidInputMessage</value>
    </data>
    <data name="UserNotFoundMessage" xml:space="preserve">
        <value>UserNotFoundMessage</value>
    </data>
    <data name="WrongPasswordMessage" xml:space="preserve">
        <value>WrongPasswordMessage</value>
    </data>
    <data name="LoginSuccessfulMessage" xml:space="preserve">
        <value>LoginSuccessfulMessage</value>
    </data>
    <data name="LogoutSuccessfulyMessage" xml:space="preserve">
        <value>LogoutSuccessfulyMessage</value>
    </data>
    <data name="UnauthorizedMessage" xml:space="preserve">
        <value>UnauthorizedMessage</value>
    </data>
    <data name="AuthorizedMessage" xml:space="preserve">
        <value>AuthorizedMessage</value>
    </data>
    <data name="OneTimeCodeSent" xml:space="preserve">
        <value>OneTimeCodeSent</value>
    </data>
    <data name="ExpiredCode" xml:space="preserve">
        <value>Expired code</value>
    </data>
    <data name="AllRolesFetchedSuccessfully" xml:space="preserve">
        <value>All roles fetched successfully.</value>
    </data>
    <data name="ClassCreatedSuccessfully" xml:space="preserve">
        <value>Class was created successfully.</value>
    </data>
    <data name="ClassNotFound" xml:space="preserve">
        <value>Class not found.</value>
    </data>
    <data name="ClassCan'tBeAccessed" xml:space="preserve">
        <value>Class can't be accessed.</value>
    </data>
    <data name="ClassFetchedSuccessfully" xml:space="preserve">
        <value>Class fetched successfully.</value>
    </data>
    <data name="ClassesRetrievedSuccessfully" xml:space="preserve">
        <value>Classes retrieved successfully.</value>
    </data>
    <data name="ClassDeletedSuccessfully" xml:space="preserve">
        <value>Class deleted successfully.</value>
    </data>
    <data name="ClassUpdatedSuccessfully" xml:space="preserve">
        <value>Class updated successfully.</value>
    </data>
    <data name="InvalidFormat" xml:space="preserve">
        <value>File format is not valid.</value>
    </data>
    <data name="InvalidSize" xml:space="preserve">
        <value>file size is not valid.</value>
    </data>
    <data name="StartDateCanNotBeLaterThanEndDatte" xml:space="preserve">
        <value>Start date cannot be later than end date.</value>
    </data>
    <data name="StartDateCanNotBeInPast" xml:space="preserve">
        <value>Start date cannot be in the past.</value>
    </data>
    <data name="EndDateCanNotBeInPast" xml:space="preserve">
        <value>End date cannot be in the past.</value>
    </data>
    <data name="StartDateCanNotBeEarlierThanCreationTime" xml:space="preserve">
        <value>Start date can not be earlier than creation time.</value>
    </data>
    <data name="AlreadyEnteredThisClass." xml:space="preserve">
        <value>already entered this class.</value>
    </data>
    <data name="AlreadyJoinedClass" xml:space="preserve">
        <value>AlreadyJoinedClass</value>
    </data>
    <data name="ClassCurrentlyNotActive" xml:space="preserve">
        <value>Class Currently Not Active</value>
    </data>
    <data name="ClassJoinedSuccessfully" xml:space="preserve">
        <value>class joined successfully.</value>
    </data>
    <data name="StudentNotInClass" xml:space="preserve">
        <value>Student Not In Class</value>
    </data>
    <data name="LeftClassSuccessfully" xml:space="preserve">
        <value>Left Class Successfully</value>
    </data>
    <data name="LeftClassNotSuccessfully" xml:space="preserve">
        <value>LeftClassNotSuccessfully</value>
    </data>
    <data name="UnauthorizedAccess" xml:space="preserve">
        <value>UnauthorizedAccess</value>
    </data>
    <data name="StudentNotFound" xml:space="preserve">
        <value>StudentNotFound</value>
    </data>
    <data name="RemoveStudentFromClassNotSuccessfully" xml:space="preserve">
        <value>RemoveStudentFromClassNotSuccessfully</value>
    </data>
    <data name="RemoveStudentFromClassSuccessfully" xml:space="preserve">
        <value>RemoveStudentFromClassSuccessfully</value>
    </data>
    <data name="ListOfStudent" xml:space="preserve">
        
        <value>ListOfStudent</value></data>
  <data name="TitleIsRequired" xml:space="preserve">
      <value>Title is required.</value>
  </data>
  <data name="TitleMaxLength" xml:space="preserve">
      <value>Title must be at most 100 chars.</value>
  </data>
  <data name="DescriptionMaxLength" xml:space="preserve">
      <value>Description must be at most 500 chars.</value>
  </data>
  <data name="PasswordIsRequired" xml:space="preserve">
      <value>Password is requires.</value>
  </data>
  <data name="ConfirmPasswordIsRequired" xml:space="preserve">
      <value>password confirmation is required.</value>
  </data>
  <data name="PasswordsDoNotMatch" xml:space="preserve">
      <value>Password and confirmation not match.</value>
  </data>
  <data name="SchedulesRequired" xml:space="preserve">
      <value>schedules is required.</value>
  </data>
  <data name="PageMustBeGreaterThanZero" xml:space="preserve">
      <value>Page number must be greater then zero.</value>
  </data>
  <data name="PageSizeMustBeBetween1And100" xml:space="preserve">
      <value>Page size must be between 1 and 100.</value>
  </data>
  <data name="EndDateCanNotBeEarlierThanUpdateTime" xml:space="preserve">
      <value>End date can not be earlier than update time.</value>
  </data>
  <data name="AccountNotConfirmed" xml:space="preserve">
      <value>AccountNotConfirmed</value>
  </data>
  <data name="TotalScoreMustBePositive" xml:space="preserve">
      <value>TotalScoreMustBePositive</value>
  </data>
  <data name="InvalidProjectTypeSelected" xml:space="preserve">
      <value>InvalidProjectTypeSelected</value>
  </data>
  <data name="InvalidGroupSize" xml:space="preserve">
      <value>InvalidGroupSize</value>
  </data>
  <data name="InvalidnIstructorForThisClass" xml:space="preserve">
      <value>InvalidnIstructorForThisClass</value>
  </data>
  <data name="ProjectNotFound" xml:space="preserve">
      <value>ProjectNotFound</value>
  </data>
  <data name="ProjectUpdatedSuccessfully" xml:space="preserve">
      <value>ProjectUpdatedSuccessfully</value>
  </data>
  <data name="ProjectCantBeAccessed" xml:space="preserve">
      <value>ProjectCantBeAccessed</value>
  </data>
  <data name="ProjectDeletedSuccessfully" xml:space="preserve">
      <value>ProjectDeletedSuccessfully</value>
  </data>
  <data name="ProjectRetrievedSuccessfully" xml:space="preserve">
      <value>ProjectRetrievedSuccessfully</value>
  </data>
  <data name="ProjectOrFileNotFound" xml:space="preserve">
      <value>ProjectOrFileNotFound</value>
  </data>
  <data name="FileDoesNotExist" xml:space="preserve">
      <value>FileDoesNotExist</value>
  </data>
  <data name="ProjectFileDownloadedSuccessfully" xml:space="preserve">
      <value>ProjectFileDownloadedSuccessfully</value>
  </data>
  <data name="ProjectsRetrievedSuccessfully" xml:space="preserve">
      <value>ProjectsRetrievedSuccessfully</value>
  </data>
</root>